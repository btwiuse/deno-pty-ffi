name: Release libs

on:
  push:
   tags:
     - '*'

permissions:
  contents: write
 
jobs:
  build:
    name: Release libs
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - name: linux-amd64
            runner: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            os: linux
          - name: linux-arm64
            runner: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            os: linux
          - name: win-amd64
            runner: windows-latest
            target: x86_64-pc-windows-msvc
            os: windows
          - name: macos-amd64
            runner: macos-latest
            target: x86_64-apple-darwin
            os: macos
          - name: macos-arm64
            runner: macos-14
            target: aarch64-apple-darwin
            os: macos

    steps:
    - uses: actions/checkout@v3
    - uses: goto-bus-stop/setup-zig@v2

    - uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Setup Cache
      uses: Swatinem/rust-cache@v2
 
    - name: Build Binary (zigbuild)
      if: matrix.name == 'linux-arm64'
      run: |
        cargo install cargo-zigbuild
        cargo zigbuild --release --manifest-path src-rust/Cargo.toml --target ${{ matrix.target }}

    - name: Build Binary
      if: matrix.os != 'linux-arm64'
      run: |
        cargo build --release --manifest-path src-rust/Cargo.toml --target ${{ matrix.target }}

    - name: Correct MacOS lib name
      if: matrix.os == 'macos'
      run: |
        echo ${{ matrix.os }}
        mv "src-rust/target/${{ matrix.target }}/release/libpty.dylib" libpty_$(uname -m).dylib

    - name: Correct Linux lib name
      if: matrix.os == 'linux'
      run: |
        echo ${{ matrix.os }}
        mv "src-rust/target/${{ matrix.target }}/release/libpty.so" libpty_$(uname -m).so

    - name: Correct Windows lib name
      if: matrix.os == 'windows'
      run: |
        echo ${{ matrix.os }}
        mv "src-rust/target/${{ matrix.target }}/release/pty.dll" pty.dll

    - name: Upload MacOS lib
      if: matrix.os == 'macos'
      uses: svenstaro/upload-release-action@v2
      with:
        file: libpty_*.dylib
        tag: ${{ github.ref }}
        overwrite: true
        file_glob: true

    - name: Upload Linux lib
      if: matrix.os == 'linux'
      uses: svenstaro/upload-release-action@v2
      with:
        file: libpty_*.so
        tag: ${{ github.ref }}
        overwrite: true
        file_glob: true

    - name: Upload Windows lib
      if: matrix.os == 'windows'
      uses: svenstaro/upload-release-action@v2
      with:
        file: pty.dll
        tag: ${{ github.ref }}
        overwrite: true
        file_glob: true
